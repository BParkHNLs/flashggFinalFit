# Hold defs of writing functions for datacard
import os, sys, re

def writePreamble(f,options):
  f.write("CMS HGG Datacard - %s - 13TeV\n"%(options.years)) 
  f.write("Auto-generated by flashggFinalFits/Datacard/makeDatacard.py\n")
  f.write("Run with: combine\n")
  f.write("---------------------------------------------\n")
  f.write("imax *\n")
  f.write("jmax *\n")
  f.write("kmax *\n")
  f.write("---------------------------------------------\n")
  return True

def writeProcesses(f,d,options):
  f.write("\n")
  # d = Pandas DataFrame
  # Shapes
  # Loop over categories in dataframe
  for cat in d.cat.unique():
    # Loop over rows for respective category
    for ir,r in d[d['cat']==cat].iterrows():
      # Write to datacard
      f.write("shapes %s %s %s %s\n"%(r['proc'],r['cat'],r['modelWSFile'],r['model']))

  # Bin, observation and rate lines
  lbin_cat = 'bin             '
  lbin_procXcat = 'bin             '
  lobs_cat = 'observation     '
  lproc = 'process         '
  lprocid = 'process         '
  lrate = 'rate            '         
  # Loop over categories
  for cat in d.cat.unique():
    lbin_cat += "%s "%cat
    lobs_cat += "-1 "
    sigID = 0
    # Loop over rows for respective category
    for ir,r in d[d['cat']==cat].iterrows():
      if r['proc'] == "data_obs": continue
      lbin_procXcat += "%s "%cat
      lproc += "%s "%r['proc']
      if r['proc'] == "bkg_mass": lprocid += "1 "
      else:
        lprocid += "%g "%sigID
        sigID -= 1
      lrate += "%.1f "%r['rate']
  #Remove final space from lines and add to file
  f.write("\n")
  for l in [lbin_cat,lbin_procXcat,lobs_cat,lproc,lprocid,lrate]: 
    l = l[:-1]
    f.write("%s\n"%l)
    
  return True

def writePdfIndex(f,d,options):
  f.write("\n")
  for cat in d.cat.unique(): f.write("pdfindex_%s_13TeV  discrete\n"%cat)
  return True
